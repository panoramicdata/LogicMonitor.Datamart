// <auto-generated />
using System;
using LogicMonitor.Datamart;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LogicMonitor.Datamart.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191107123355_MoveToMultipleAggregationTables")]
    partial class MoveToMultipleAggregationTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LogicMonitor.Datamart.Models.AlertRuleStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSourceInstanceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSourceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EscalationChainId")
                        .HasColumnType("int");

                    b.Property<int>("EscalationChainIntervalMinutes")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LevelString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<bool>("SuppressAlertAckSdt")
                        .HasColumnType("bit");

                    b.Property<bool>("SuppressAlertClear")
                        .HasColumnType("bit");

                    b.HasKey("DatamartId");

                    b.ToTable("AlertRules");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.AlertStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AckComment")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Acked")
                        .HasColumnType("bit");

                    b.Property<string>("AckedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("AckedOnSeconds")
                        .HasColumnType("int");

                    b.Property<int>("AlertEscalationChainId")
                        .HasColumnType("int");

                    b.Property<string>("AlertEscalationChainName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("AlertEscalationSubChainId")
                        .HasColumnType("int");

                    b.Property<string>("AlertRecipients")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("AlertRuleId")
                        .HasColumnType("int");

                    b.Property<string>("AlertRuleName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("AlertType")
                        .HasColumnType("int");

                    b.Property<string>("ClearValue")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CustomColumn1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CustomColumn2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CustomColumn3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CustomColumn4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CustomColumn5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("DataPointId")
                        .HasColumnType("int");

                    b.Property<string>("DataPointName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailMessageBody")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("DetailMessageSubject")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("EndOnSeconds")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("InScheduledDownTime")
                        .HasColumnType("bit");

                    b.Property<string>("InstanceDescription")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("InstanceId")
                        .HasColumnType("int");

                    b.Property<string>("InstanceName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("InternalId")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsCleared")
                        .HasColumnType("bit");

                    b.Property<int?>("MonitorObjectGroup0Id")
                        .HasColumnType("int");

                    b.Property<int?>("MonitorObjectGroup1Id")
                        .HasColumnType("int");

                    b.Property<int?>("MonitorObjectGroup2Id")
                        .HasColumnType("int");

                    b.Property<int?>("MonitorObjectGroup3Id")
                        .HasColumnType("int");

                    b.Property<int?>("MonitorObjectGroup4Id")
                        .HasColumnType("int");

                    b.Property<int?>("MonitorObjectGroup5Id")
                        .HasColumnType("int");

                    b.Property<int?>("MonitorObjectGroup6Id")
                        .HasColumnType("int");

                    b.Property<int?>("MonitorObjectGroup7Id")
                        .HasColumnType("int");

                    b.Property<int?>("MonitorObjectGroup8Id")
                        .HasColumnType("int");

                    b.Property<int?>("MonitorObjectGroup9Id")
                        .HasColumnType("int");

                    b.Property<int?>("MonitorObjectId")
                        .HasColumnType("int");

                    b.Property<string>("MonitorObjectName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("MonitorObjectType")
                        .HasColumnType("int");

                    b.Property<int>("NextRecipient")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("ResourceTemplateName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ResourceTemplateType")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<int>("StartOnSeconds")
                        .HasColumnType("int");

                    b.Property<string>("Thresholds")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DatamartId");

                    b.HasIndex("AlertRuleId");

                    b.HasIndex("DataPointId");

                    b.HasIndex("DataPointName");

                    b.HasIndex("EndOnSeconds");

                    b.HasIndex("Id");

                    b.HasIndex("InstanceId");

                    b.HasIndex("InstanceName");

                    b.HasIndex("InternalId");

                    b.HasIndex("IsCleared");

                    b.HasIndex("MonitorObjectGroup0Id");

                    b.HasIndex("MonitorObjectGroup1Id");

                    b.HasIndex("MonitorObjectGroup2Id");

                    b.HasIndex("MonitorObjectGroup3Id");

                    b.HasIndex("MonitorObjectGroup4Id");

                    b.HasIndex("MonitorObjectGroup5Id");

                    b.HasIndex("MonitorObjectGroup6Id");

                    b.HasIndex("MonitorObjectGroup7Id");

                    b.HasIndex("MonitorObjectGroup8Id");

                    b.HasIndex("MonitorObjectGroup9Id");

                    b.HasIndex("MonitorObjectId");

                    b.HasIndex("MonitorObjectName");

                    b.HasIndex("MonitorObjectType");

                    b.HasIndex("ResourceId");

                    b.HasIndex("ResourceTemplateId");

                    b.HasIndex("ResourceTemplateName");

                    b.HasIndex("ResourceTemplateType");

                    b.HasIndex("Severity");

                    b.HasIndex("StartOnSeconds");

                    b.HasIndex("StartOnSeconds", "EndOnSeconds", "IsCleared", "InScheduledDownTime", "MonitorObjectGroup0Id", "MonitorObjectGroup1Id", "MonitorObjectGroup2Id", "MonitorObjectGroup3Id", "MonitorObjectGroup4Id", "MonitorObjectGroup5Id", "MonitorObjectGroup6Id", "MonitorObjectGroup7Id", "MonitorObjectGroup8Id", "MonitorObjectGroup9Id")
                        .HasName("IX_Alerts_FasterPercentageAvailability")
                        .HasAnnotation("SqlServer:Include", new[] { "Id", "Severity", "ClearValue", "MonitorObjectId", "ResourceTemplateName", "InstanceId", "InstanceName" });

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.CollectorGroupStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CollectorCount")
                        .HasColumnType("int");

                    b.Property<long>("CreatedOnTimeStampSeconds")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DatamartId");

                    b.ToTable("CollectorGroups");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.CollectorStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AckComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Acked")
                        .HasColumnType("bit");

                    b.Property<string>("AckedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AckedOnLocalString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AckedOnUtcTimestampUtc")
                        .HasColumnType("bigint");

                    b.Property<string>("Architecture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BackupCollectorId")
                        .HasColumnType("int");

                    b.Property<int>("Build")
                        .HasColumnType("int");

                    b.Property<bool>("CanDowngrade")
                        .HasColumnType("bit");

                    b.Property<string>("CanDowngradeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ClearSent")
                        .HasColumnType("bit");

                    b.Property<string>("CollectorConfiguration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Configuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConfigurationVersion")
                        .HasColumnType("int");

                    b.Property<string>("CreatedOnLocalString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedOnTimeStampUtc")
                        .HasColumnType("bigint");

                    b.Property<string>("Credential")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Credential2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceCount")
                        .HasColumnType("int");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<bool>("Ea")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableFailBack")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableFailOverOnCollectorDevice")
                        .HasColumnType("bit");

                    b.Property<int>("EscalationChainId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasFailOverDevice")
                        .HasColumnType("bit");

                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("InSdt")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDown")
                        .HasColumnType("bit");

                    b.Property<string>("LastSentNotificationOnLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LastSentNotificationOnTimeStampUtc")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NeedAutoCreateCollectorDevice")
                        .HasColumnType("bit");

                    b.Property<int>("NetscanVersion")
                        .HasColumnType("int");

                    b.Property<int>("NextRecipient")
                        .HasColumnType("int");

                    b.Property<string>("OnetimeDowngradeInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreviousVersion")
                        .HasColumnType("int");

                    b.Property<string>("ProxyConfiguration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResendIntervalSeconds")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecifiedCollectorDeviceGroupId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("SuppressAlertClear")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedOnLocalString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedOnTimeStampUtc")
                        .HasColumnType("bigint");

                    b.Property<long>("UpgradeTimeUtcSeconds")
                        .HasColumnType("bigint");

                    b.Property<int>("UptimeSeconds")
                        .HasColumnType("int");

                    b.Property<string>("UserChangeOnLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserChangeOnUtcSeconds")
                        .HasColumnType("bigint");

                    b.Property<int>("UserPermission")
                        .HasColumnType("int");

                    b.Property<int>("UserVisibleDeviceCount")
                        .HasColumnType("int");

                    b.Property<int>("UserVisibleWebsiteCount")
                        .HasColumnType("int");

                    b.Property<string>("WatchdogConfiguration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WatchdogUpdatedOnLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WatchdogUpdatedOnSeconds")
                        .HasColumnType("bigint");

                    b.Property<string>("WebsiteConfiguration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WebsiteCount")
                        .HasColumnType("int");

                    b.Property<string>("WrapperConfiguration")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DatamartId");

                    b.HasIndex("GroupId");

                    b.ToTable("Collectors");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.ConfigSourceStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DatamartId");

                    b.ToTable("ConfigSources");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.DataSourceDataPointStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataSourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("MeasurementUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DatamartId");

                    b.HasIndex("DataSourceId");

                    b.ToTable("DataSourceDataPoints");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.DataSourceStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DatamartId");

                    b.ToTable("DataSources");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.DeviceDataSourceInstanceDataStoreItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataPointName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeviceDataSourceInstanceId")
                        .HasColumnType("int");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DateTime");

                    b.HasIndex("DeviceDataSourceInstanceId", "DataPointName");

                    b.ToTable("DeviceDataSourceInstanceData");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.DeviceDataSourceInstanceStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlertDisableStatus")
                        .HasColumnType("int");

                    b.Property<int>("AlertStatus")
                        .HasColumnType("int");

                    b.Property<int>("AlertStatusPriority")
                        .HasColumnType("int");

                    b.Property<int?>("DataSourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeviceDataSourceId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<bool>("DisableAlerting")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastAggregationHourWrittenUtc")
                        .HasColumnType("datetime2");

                    b.Property<long>("LastCollectedTimeSeconds")
                        .HasColumnType("bigint");

                    b.Property<long>("LastMeasurementUpdatedTimeSeconds")
                        .HasColumnType("bigint");

                    b.Property<long>("LastUpdatedTimeSeconds")
                        .HasColumnType("bigint");

                    b.Property<bool>("LockDescription")
                        .HasColumnType("bit");

                    b.Property<string>("SdtAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SdtStatus")
                        .HasColumnType("int");

                    b.Property<bool>("StopMonitoring")
                        .HasColumnType("bit");

                    b.Property<string>("WildValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WildValue2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DatamartId");

                    b.HasIndex("DeviceDataSourceId");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceDataSourceInstances");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.DeviceDataSourceStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlertStatusPriority")
                        .HasColumnType("int");

                    b.Property<long>("AssignedOnSeconds")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedOnSeconds")
                        .HasColumnType("bigint");

                    b.Property<string>("DataSourceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSourceDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataSourceId")
                        .HasColumnType("int");

                    b.Property<string>("DataSourceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("InstanceAutoGroupEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("InstanceCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsAutoDiscoveryEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMonitoringDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMultiple")
                        .HasColumnType("bit");

                    b.Property<int>("MonitoringInstanceCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NextAutoDiscoveryOnSeconds")
                        .HasColumnType("bigint");

                    b.Property<long>("UpdatedOnSeconds")
                        .HasColumnType("bigint");

                    b.HasKey("DatamartId");

                    b.HasIndex("DataSourceId");

                    b.ToTable("DeviceDataSources");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.DeviceGroupStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlertDisableStatus")
                        .HasColumnType("int");

                    b.Property<bool>("AlertEnable")
                        .HasColumnType("bit");

                    b.Property<int>("AlertStatus")
                        .HasColumnType("int");

                    b.Property<int>("AlertStatusPriority")
                        .HasColumnType("int");

                    b.Property<string>("AppliesTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutoVisualResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AwsDeviceCount")
                        .HasColumnType("int");

                    b.Property<string>("AwsRegionsInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AwsTestResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AwsTestResultCode")
                        .HasColumnType("int");

                    b.Property<int>("AzureDeviceCount")
                        .HasColumnType("int");

                    b.Property<string>("AzureRegionsInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzureTestResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AzureTestResultCode")
                        .HasColumnType("int");

                    b.Property<string>("ClusterAlertStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClusterAlertStatusPriority")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedOnTimestampUtc")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("DefaultAgentId")
                        .HasColumnType("int");

                    b.Property<string>("DefaultCollectorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DefaultCollectorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceCount")
                        .HasColumnType("int");

                    b.Property<int>("DeviceGroupType")
                        .HasColumnType("int");

                    b.Property<int>("DirectDeviceCount")
                        .HasColumnType("int");

                    b.Property<int>("DirectSubGroupCount")
                        .HasColumnType("int");

                    b.Property<bool>("EffectiveAlertEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("FullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GcpDeviceCount")
                        .HasColumnType("int");

                    b.Property<string>("GcpRegionsInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GcpTestResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GcpTestResultCode")
                        .HasColumnType("int");

                    b.Property<string>("GroupStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasNetflowEnabledDevices")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsAlertingDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNetflowEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("SdtStatus")
                        .HasColumnType("int");

                    b.Property<int>("UserPermission")
                        .HasColumnType("int");

                    b.HasKey("DatamartId");

                    b.ToTable("DeviceGroups");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.DeviceStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlertDisableStatus")
                        .HasColumnType("int");

                    b.Property<int>("AlertStatus")
                        .HasColumnType("int");

                    b.Property<int>("AlertStatusPriority")
                        .HasColumnType("int");

                    b.Property<bool>("AncestorHasDisabledLogicModule")
                        .HasColumnType("bit");

                    b.Property<long?>("AutoPropertiesAssignedOnSeconds")
                        .HasColumnType("bigint");

                    b.Property<long?>("AutoPropertiesUpdatedOnSeconds")
                        .HasColumnType("bigint");

                    b.Property<int>("AwsState")
                        .HasColumnType("int");

                    b.Property<int>("AzureState")
                        .HasColumnType("int");

                    b.Property<bool>("CanUseRemoteSession")
                        .HasColumnType("bit");

                    b.Property<string>("CollectorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedOnSeconds")
                        .HasColumnType("bigint");

                    b.Property<int>("CurrentCollectorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<long>("DeletedTimeinMs")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceGroupIdsString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("DeviceStatus")
                        .HasColumnType("tinyint");

                    b.Property<int>("DeviceType")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EffectiveAlertEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableNetflow")
                        .HasColumnType("bit");

                    b.Property<int>("GcpState")
                        .HasColumnType("int");

                    b.Property<bool>("HasActiveInstance")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDisabledSubResource")
                        .HasColumnType("bit");

                    b.Property<bool>("HasMore")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsAlertingDisabled")
                        .HasColumnType("bit");

                    b.Property<long>("LastAlertClosedTimeSeconds")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastDataTimeSeconds")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastRawDataTimeSeconds")
                        .HasColumnType("bigint");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetflowCollectorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NetflowCollectorGroupId")
                        .HasColumnType("int");

                    b.Property<string>("NetflowCollectorGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NetflowCollectorId")
                        .HasColumnType("int");

                    b.Property<int>("PreferredCollectorGroupId")
                        .HasColumnType("int");

                    b.Property<string>("PreferredCollectorGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreferredCollectorId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedDeviceId")
                        .HasColumnType("int");

                    b.Property<int>("ScanConfigId")
                        .HasColumnType("int");

                    b.Property<int>("SdtStatus")
                        .HasColumnType("int");

                    b.Property<long>("ToDeleteTimeinMs")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedOnSeconds")
                        .HasColumnType("bigint");

                    b.Property<int>("UptimeInSeconds")
                        .HasColumnType("int");

                    b.Property<int>("UserPermission")
                        .HasColumnType("int");

                    b.HasKey("DatamartId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.EscalationChainStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnableThrottling")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("InAlerting")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThrottlingAlertCount")
                        .HasColumnType("int");

                    b.Property<int>("ThrottlingPeriodMinutes")
                        .HasColumnType("int");

                    b.HasKey("DatamartId");

                    b.ToTable("EscalationChains");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.EventSourceStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DatamartId");

                    b.ToTable("EventSources");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.LogStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("HappenedOnTimeStampUtc")
                        .HasColumnType("bigint");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("DatamartId");

                    b.ToTable("LogItems");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.MonitorObjectGroupStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullPath")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("MonitoredObjectType")
                        .HasColumnType("int");

                    b.HasKey("DatamartId");

                    b.HasIndex("FullPath", "MonitoredObjectType");

                    b.ToTable("MonitorObjectGroups");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.WebsiteGroupStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlertDisableStatus")
                        .HasColumnType("int");

                    b.Property<int>("AlertStatus")
                        .HasColumnType("int");

                    b.Property<int>("AlertStatusPriority")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectWebsiteCount")
                        .HasColumnType("int");

                    b.Property<int>("DirectWebsiteGroupCount")
                        .HasColumnType("int");

                    b.Property<bool>("DisableAlerting")
                        .HasColumnType("bit");

                    b.Property<string>("FullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupStatus")
                        .HasColumnType("int");

                    b.Property<bool>("HasWebsitesDisabled")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("SdtStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("StopMonitoring")
                        .HasColumnType("bit");

                    b.Property<int>("UserPermissionString")
                        .HasColumnType("int");

                    b.Property<int>("WebsiteCount")
                        .HasColumnType("int");

                    b.HasKey("DatamartId");

                    b.ToTable("WebsiteGroups");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.WebsiteStoreItem", b =>
                {
                    b.Property<int>("DatamartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlertDisableStatus")
                        .HasColumnType("int");

                    b.Property<string>("AlertExpression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AlertStatus")
                        .HasColumnType("int");

                    b.Property<int>("AlertStatusPriority")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatamartCreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatamartLastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GlobalSmAlertCond")
                        .HasColumnType("int");

                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IgnoreSsl")
                        .HasColumnType("bit");

                    b.Property<byte>("IndividualAlertLevel")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IndividualSmAlertEnable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAlertingDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("OverallAlertLevel")
                        .HasColumnType("tinyint");

                    b.Property<int>("PacketsNotReceivedTimeoutMs")
                        .HasColumnType("int");

                    b.Property<int>("PageLoadAlertTimeInMs")
                        .HasColumnType("int");

                    b.Property<int>("PercentPacketsNotReceiveInTime")
                        .HasColumnType("int");

                    b.Property<int>("PollingIntervalMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Schema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Script")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SdtStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("StopMonitoring")
                        .HasColumnType("bit");

                    b.Property<bool>("StopMonitoringByWebsiteGroup")
                        .HasColumnType("bit");

                    b.Property<int>("Transition")
                        .HasColumnType("int");

                    b.Property<bool>("TriggerSslExpirationAlerts")
                        .HasColumnType("bit");

                    b.Property<bool>("TriggerSslStatusAlerts")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<bool>("UseDefaultAlertSetting")
                        .HasColumnType("bit");

                    b.Property<bool>("UseDefaultLocationSetting")
                        .HasColumnType("bit");

                    b.Property<int>("UserPermissionString")
                        .HasColumnType("int");

                    b.Property<int>("WebsiteGroupId")
                        .HasColumnType("int");

                    b.Property<int>("WebsiteMethod")
                        .HasColumnType("int");

                    b.HasKey("DatamartId");

                    b.HasIndex("WebsiteGroupId");

                    b.ToTable("Websites");
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.AlertStoreItem", b =>
                {
                    b.HasOne("LogicMonitor.Datamart.Models.AlertRuleStoreItem", "AlertRule")
                        .WithMany("Alerts")
                        .HasForeignKey("AlertRuleId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LogicMonitor.Datamart.Models.MonitorObjectGroupStoreItem", "MonitorObjectGroup0")
                        .WithMany("AlertsFromGroup0")
                        .HasForeignKey("MonitorObjectGroup0Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LogicMonitor.Datamart.Models.MonitorObjectGroupStoreItem", "MonitorObjectGroup1")
                        .WithMany("AlertsFromGroup1")
                        .HasForeignKey("MonitorObjectGroup1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LogicMonitor.Datamart.Models.MonitorObjectGroupStoreItem", "MonitorObjectGroup2")
                        .WithMany("AlertsFromGroup2")
                        .HasForeignKey("MonitorObjectGroup2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LogicMonitor.Datamart.Models.MonitorObjectGroupStoreItem", "MonitorObjectGroup3")
                        .WithMany("AlertsFromGroup3")
                        .HasForeignKey("MonitorObjectGroup3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LogicMonitor.Datamart.Models.MonitorObjectGroupStoreItem", "MonitorObjectGroup4")
                        .WithMany("AlertsFromGroup4")
                        .HasForeignKey("MonitorObjectGroup4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LogicMonitor.Datamart.Models.MonitorObjectGroupStoreItem", "MonitorObjectGroup5")
                        .WithMany("AlertsFromGroup5")
                        .HasForeignKey("MonitorObjectGroup5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LogicMonitor.Datamart.Models.MonitorObjectGroupStoreItem", "MonitorObjectGroup6")
                        .WithMany("AlertsFromGroup6")
                        .HasForeignKey("MonitorObjectGroup6Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LogicMonitor.Datamart.Models.MonitorObjectGroupStoreItem", "MonitorObjectGroup7")
                        .WithMany("AlertsFromGroup7")
                        .HasForeignKey("MonitorObjectGroup7Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LogicMonitor.Datamart.Models.MonitorObjectGroupStoreItem", "MonitorObjectGroup8")
                        .WithMany("AlertsFromGroup8")
                        .HasForeignKey("MonitorObjectGroup8Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LogicMonitor.Datamart.Models.MonitorObjectGroupStoreItem", "MonitorObjectGroup9")
                        .WithMany("AlertsFromGroup9")
                        .HasForeignKey("MonitorObjectGroup9Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.CollectorStoreItem", b =>
                {
                    b.HasOne("LogicMonitor.Datamart.Models.CollectorGroupStoreItem", "CollectorGroup")
                        .WithMany("Collectors")
                        .HasForeignKey("GroupId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.DataSourceDataPointStoreItem", b =>
                {
                    b.HasOne("LogicMonitor.Datamart.Models.DataSourceStoreItem", "DataSource")
                        .WithMany("DataPoints")
                        .HasForeignKey("DataSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.DeviceDataSourceInstanceDataStoreItem", b =>
                {
                    b.HasOne("LogicMonitor.Datamart.Models.DeviceDataSourceInstanceStoreItem", "DeviceDataSourceInstance")
                        .WithMany("DataMeasures")
                        .HasForeignKey("DeviceDataSourceInstanceId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.DeviceDataSourceInstanceStoreItem", b =>
                {
                    b.HasOne("LogicMonitor.Datamart.Models.DeviceDataSourceStoreItem", "DeviceDataSource")
                        .WithMany("DeviceDataSourceInstances")
                        .HasForeignKey("DeviceDataSourceId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LogicMonitor.Datamart.Models.DeviceStoreItem", "Device")
                        .WithMany("DeviceDataSourceInstances")
                        .HasForeignKey("DeviceId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.DeviceDataSourceStoreItem", b =>
                {
                    b.HasOne("LogicMonitor.Datamart.Models.DataSourceStoreItem", "DataSource")
                        .WithMany("DeviceDataSources")
                        .HasForeignKey("DataSourceId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("LogicMonitor.Datamart.Models.WebsiteStoreItem", b =>
                {
                    b.HasOne("LogicMonitor.Datamart.Models.WebsiteGroupStoreItem", "WebsiteGroup")
                        .WithMany("Websites")
                        .HasForeignKey("WebsiteGroupId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
